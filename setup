#! /bin/bash

set -o pipefail -E -e -u

readonly FALSE=0
readonly TRUE=1

dotfiles_repo_path="$(dirname "$(realpath "$0")")"
is_force_setup=${FALSE}
is_install_pkg=${FALSE}

# Usage instructions
print_usage() {
	echo "
NAME
	setup - Setup Dotfiles for the current user and optionally install packages.

SYNOPSIS
	./setup [--force-setup] [--install-pkg] [--help]

DESCRIPTION
	Symlink Dotfiles to current user's home directory and optionally install
	packages.

	Dotfiles supported: .clang-format, .editorconfig, .gitconfig, .prettierrc,
	.tmux.conf, .vimrc

OPTIONS
	--force-setup
		For every Dotfile in the repository, delete the corresponding
		Dotfile/Symlink in the current user's home directory (if it exists) and
		then Symlink the Dotfile.
		Requirement: Optional

	--install-pkg
		Install packages and plugin-extras on supported OSs. Symlinking  (setup)
		will be done after package installation.
		Requirement: Optional, but note that some Vim plugins depend on packages
		to be installed to work.
		Installed packages: bear, build-essential, clang-format, cmake, curl, git,
		man, net-tools, nodejs, npm, python3, python3-dev, shellcheck, shfmt,
		tmux, vim
		Supported OSs: Debian-based distros that support APT, like Ubuntu.
		NOTE: shfmt is available only on Ubuntu >= v22 and so the script will
		fail on Ubuntu OSs less than that version.

	--help
		Print this command usage instruction.
		Requirement: Optional

AUTHOR
	Written by Harsh Kapadia (https://harshkapadia.me).

REPORTING BUGS
	Report bugs and improvements at
	https://github.com/HarshKapadia2/dotfiles/issues.
"
}

# Install Bash Language Server for YouCompleteMe Vim plugin
add_youcompleteme_extra_support() {
	lsp_dir="${dotfiles_repo_path}/lsp-examples"
	vimrc_path="${dotfiles_repo_path}/.vimrc"
	curr_vimrc_last_line="$(tail --lines=1 "${vimrc_path}")"
	vimrc_line_to_add="source ${lsp_dir}/vimrc.generated"

	if [[ -d "${lsp_dir}" ]]; then
		rm -rf "${lsp_dir}"
	fi

	if [[ "${curr_vimrc_last_line}" == "${vimrc_line_to_add}" ]]; then
		head --lines=-1 "${vimrc_path}" > "${dotfiles_repo_path}/temp.vimrc" \
			&& mv "${dotfiles_repo_path}/temp.vimrc" "${vimrc_path}"
	fi

	git clone https://github.com/ycm-core/lsp-examples.git "${lsp_dir}"

	curr_dir="$(pwd)"
	cd "${lsp_dir}" && ./install.py "--enable-bash"
	cd "${curr_dir}"

	echo "${vimrc_line_to_add}" >> "${dotfiles_repo_path}/.vimrc"

	echo ""
	echo "Above line added to .vimrc!"
}

# Handle command-line arguments
if [[ "$#" -gt 0 ]]; then
	while [[ "$#" -gt 0 ]]; do
		case "$1" in
			"--force-setup")
				is_force_setup=${TRUE}
				shift
				;;
			"--install-pkg")
				is_install_pkg=${TRUE}
				shift
				;;
			"--help")
				print_usage
				exit 0
				;;
			*)
				echo ""
				echo "NOTE: Ignoring invalid argument $1."
				echo ""
				shift
				;;
		esac
	done
fi

# Install packages and plugin-extras
if [[ "${is_install_pkg}" == "${TRUE}" ]]; then
	if command -v "apt-get"; then
		echo ""
		echo "Installing packages..."
		echo ""

		sudo apt-get update
		sudo apt-get install -y bear build-essential clang-format cmake curl \
			git man net-tools nodejs npm python3 python3-dev shellcheck shfmt \
			tmux vim

		add_youcompleteme_extra_support

		echo ""
		echo "Package and plugin-extras installation complete!"
		echo ""
	else
		echo ""
		echo "NOTE: Skipped package installation as package manager is not
supported."
		echo ""
	fi
fi

# Set up dotfiles
echo ""
echo "Setting up dotfiles..."
echo ""

file_list=$(ls -A "${dotfiles_repo_path}")

for file_name in ${file_list}; do
	if [[ ("${file_name:0:1}" != ".") ||
		("${file_name}" == ".git") ||
		("${file_name}" == ".gitignore") ||
		("${file_name}" == *".swp") ]]; then
		continue
	fi

	if [[ ("${is_force_setup}" == "${TRUE}") && (-L "$HOME/${file_name}") ]]; then
		echo "Deleting ${file_name} symlink."
		rm "$HOME/${file_name}"
	fi

	if [[ ! -f "$HOME/${file_name}" ]]; then
		ln --symbolic "${dotfiles_repo_path}/${file_name}" "$HOME/${file_name}"
		echo "Symlinked ${file_name}!"
		echo ""
	else
		printf "\nNOTE: Skipped Symlinking %s as it already exists in" \
			"${file_name}"
		printf " %s. Use the '--force-setup' option to force Symlinking.\n" \
			"$HOME"
	fi
done

echo ""
echo "Done!"
echo ""
